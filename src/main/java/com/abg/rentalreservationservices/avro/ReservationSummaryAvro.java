/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.abg.rentalreservationservices.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ReservationSummaryAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1924471684423371202L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ReservationSummaryAvro\",\"namespace\":\"com.abg.rentalreservationservices.avro\",\"fields\":[{\"name\":\"reservationId\",\"type\":\"long\"},{\"name\":\"reserverName\",\"type\":\"string\"},{\"name\":\"reserverEmail\",\"type\":\"string\"},{\"name\":\"reserverPhoneNumber\",\"type\":\"string\"},{\"name\":\"reserverDrivingLicenceNumber\",\"type\":\"string\"},{\"name\":\"carName\",\"type\":\"string\"},{\"name\":\"carPlate\",\"type\":\"string\"},{\"name\":\"carType\",\"type\":\"string\"},{\"name\":\"carSeatingCapacity\",\"type\":\"int\"},{\"name\":\"sourceCity\",\"type\":\"string\"},{\"name\":\"destinationCity\",\"type\":\"string\"},{\"name\":\"pickUpAddress\",\"type\":\"string\"},{\"name\":\"dropOffAddress\",\"type\":\"string\"},{\"name\":\"startDateTime\",\"type\":\"string\"},{\"name\":\"endDateTime\",\"type\":\"string\"},{\"name\":\"reservationAmount\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ReservationSummaryAvro> ENCODER =
      new BinaryMessageEncoder<ReservationSummaryAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ReservationSummaryAvro> DECODER =
      new BinaryMessageDecoder<ReservationSummaryAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ReservationSummaryAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ReservationSummaryAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ReservationSummaryAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ReservationSummaryAvro>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ReservationSummaryAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ReservationSummaryAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ReservationSummaryAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ReservationSummaryAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private long reservationId;
   private java.lang.CharSequence reserverName;
   private java.lang.CharSequence reserverEmail;
   private java.lang.CharSequence reserverPhoneNumber;
   private java.lang.CharSequence reserverDrivingLicenceNumber;
   private java.lang.CharSequence carName;
   private java.lang.CharSequence carPlate;
   private java.lang.CharSequence carType;
   private int carSeatingCapacity;
   private java.lang.CharSequence sourceCity;
   private java.lang.CharSequence destinationCity;
   private java.lang.CharSequence pickUpAddress;
   private java.lang.CharSequence dropOffAddress;
   private java.lang.CharSequence startDateTime;
   private java.lang.CharSequence endDateTime;
   private java.lang.CharSequence reservationAmount;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ReservationSummaryAvro() {}

  /**
   * All-args constructor.
   * @param reservationId The new value for reservationId
   * @param reserverName The new value for reserverName
   * @param reserverEmail The new value for reserverEmail
   * @param reserverPhoneNumber The new value for reserverPhoneNumber
   * @param reserverDrivingLicenceNumber The new value for reserverDrivingLicenceNumber
   * @param carName The new value for carName
   * @param carPlate The new value for carPlate
   * @param carType The new value for carType
   * @param carSeatingCapacity The new value for carSeatingCapacity
   * @param sourceCity The new value for sourceCity
   * @param destinationCity The new value for destinationCity
   * @param pickUpAddress The new value for pickUpAddress
   * @param dropOffAddress The new value for dropOffAddress
   * @param startDateTime The new value for startDateTime
   * @param endDateTime The new value for endDateTime
   * @param reservationAmount The new value for reservationAmount
   */
  public ReservationSummaryAvro(java.lang.Long reservationId, java.lang.CharSequence reserverName, java.lang.CharSequence reserverEmail, java.lang.CharSequence reserverPhoneNumber, java.lang.CharSequence reserverDrivingLicenceNumber, java.lang.CharSequence carName, java.lang.CharSequence carPlate, java.lang.CharSequence carType, java.lang.Integer carSeatingCapacity, java.lang.CharSequence sourceCity, java.lang.CharSequence destinationCity, java.lang.CharSequence pickUpAddress, java.lang.CharSequence dropOffAddress, java.lang.CharSequence startDateTime, java.lang.CharSequence endDateTime, java.lang.CharSequence reservationAmount) {
    this.reservationId = reservationId;
    this.reserverName = reserverName;
    this.reserverEmail = reserverEmail;
    this.reserverPhoneNumber = reserverPhoneNumber;
    this.reserverDrivingLicenceNumber = reserverDrivingLicenceNumber;
    this.carName = carName;
    this.carPlate = carPlate;
    this.carType = carType;
    this.carSeatingCapacity = carSeatingCapacity;
    this.sourceCity = sourceCity;
    this.destinationCity = destinationCity;
    this.pickUpAddress = pickUpAddress;
    this.dropOffAddress = dropOffAddress;
    this.startDateTime = startDateTime;
    this.endDateTime = endDateTime;
    this.reservationAmount = reservationAmount;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return reservationId;
    case 1: return reserverName;
    case 2: return reserverEmail;
    case 3: return reserverPhoneNumber;
    case 4: return reserverDrivingLicenceNumber;
    case 5: return carName;
    case 6: return carPlate;
    case 7: return carType;
    case 8: return carSeatingCapacity;
    case 9: return sourceCity;
    case 10: return destinationCity;
    case 11: return pickUpAddress;
    case 12: return dropOffAddress;
    case 13: return startDateTime;
    case 14: return endDateTime;
    case 15: return reservationAmount;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: reservationId = (java.lang.Long)value$; break;
    case 1: reserverName = (java.lang.CharSequence)value$; break;
    case 2: reserverEmail = (java.lang.CharSequence)value$; break;
    case 3: reserverPhoneNumber = (java.lang.CharSequence)value$; break;
    case 4: reserverDrivingLicenceNumber = (java.lang.CharSequence)value$; break;
    case 5: carName = (java.lang.CharSequence)value$; break;
    case 6: carPlate = (java.lang.CharSequence)value$; break;
    case 7: carType = (java.lang.CharSequence)value$; break;
    case 8: carSeatingCapacity = (java.lang.Integer)value$; break;
    case 9: sourceCity = (java.lang.CharSequence)value$; break;
    case 10: destinationCity = (java.lang.CharSequence)value$; break;
    case 11: pickUpAddress = (java.lang.CharSequence)value$; break;
    case 12: dropOffAddress = (java.lang.CharSequence)value$; break;
    case 13: startDateTime = (java.lang.CharSequence)value$; break;
    case 14: endDateTime = (java.lang.CharSequence)value$; break;
    case 15: reservationAmount = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'reservationId' field.
   * @return The value of the 'reservationId' field.
   */
  public long getReservationId() {
    return reservationId;
  }


  /**
   * Sets the value of the 'reservationId' field.
   * @param value the value to set.
   */
  public void setReservationId(long value) {
    this.reservationId = value;
  }

  /**
   * Gets the value of the 'reserverName' field.
   * @return The value of the 'reserverName' field.
   */
  public java.lang.CharSequence getReserverName() {
    return reserverName;
  }


  /**
   * Sets the value of the 'reserverName' field.
   * @param value the value to set.
   */
  public void setReserverName(java.lang.CharSequence value) {
    this.reserverName = value;
  }

  /**
   * Gets the value of the 'reserverEmail' field.
   * @return The value of the 'reserverEmail' field.
   */
  public java.lang.CharSequence getReserverEmail() {
    return reserverEmail;
  }


  /**
   * Sets the value of the 'reserverEmail' field.
   * @param value the value to set.
   */
  public void setReserverEmail(java.lang.CharSequence value) {
    this.reserverEmail = value;
  }

  /**
   * Gets the value of the 'reserverPhoneNumber' field.
   * @return The value of the 'reserverPhoneNumber' field.
   */
  public java.lang.CharSequence getReserverPhoneNumber() {
    return reserverPhoneNumber;
  }


  /**
   * Sets the value of the 'reserverPhoneNumber' field.
   * @param value the value to set.
   */
  public void setReserverPhoneNumber(java.lang.CharSequence value) {
    this.reserverPhoneNumber = value;
  }

  /**
   * Gets the value of the 'reserverDrivingLicenceNumber' field.
   * @return The value of the 'reserverDrivingLicenceNumber' field.
   */
  public java.lang.CharSequence getReserverDrivingLicenceNumber() {
    return reserverDrivingLicenceNumber;
  }


  /**
   * Sets the value of the 'reserverDrivingLicenceNumber' field.
   * @param value the value to set.
   */
  public void setReserverDrivingLicenceNumber(java.lang.CharSequence value) {
    this.reserverDrivingLicenceNumber = value;
  }

  /**
   * Gets the value of the 'carName' field.
   * @return The value of the 'carName' field.
   */
  public java.lang.CharSequence getCarName() {
    return carName;
  }


  /**
   * Sets the value of the 'carName' field.
   * @param value the value to set.
   */
  public void setCarName(java.lang.CharSequence value) {
    this.carName = value;
  }

  /**
   * Gets the value of the 'carPlate' field.
   * @return The value of the 'carPlate' field.
   */
  public java.lang.CharSequence getCarPlate() {
    return carPlate;
  }


  /**
   * Sets the value of the 'carPlate' field.
   * @param value the value to set.
   */
  public void setCarPlate(java.lang.CharSequence value) {
    this.carPlate = value;
  }

  /**
   * Gets the value of the 'carType' field.
   * @return The value of the 'carType' field.
   */
  public java.lang.CharSequence getCarType() {
    return carType;
  }


  /**
   * Sets the value of the 'carType' field.
   * @param value the value to set.
   */
  public void setCarType(java.lang.CharSequence value) {
    this.carType = value;
  }

  /**
   * Gets the value of the 'carSeatingCapacity' field.
   * @return The value of the 'carSeatingCapacity' field.
   */
  public int getCarSeatingCapacity() {
    return carSeatingCapacity;
  }


  /**
   * Sets the value of the 'carSeatingCapacity' field.
   * @param value the value to set.
   */
  public void setCarSeatingCapacity(int value) {
    this.carSeatingCapacity = value;
  }

  /**
   * Gets the value of the 'sourceCity' field.
   * @return The value of the 'sourceCity' field.
   */
  public java.lang.CharSequence getSourceCity() {
    return sourceCity;
  }


  /**
   * Sets the value of the 'sourceCity' field.
   * @param value the value to set.
   */
  public void setSourceCity(java.lang.CharSequence value) {
    this.sourceCity = value;
  }

  /**
   * Gets the value of the 'destinationCity' field.
   * @return The value of the 'destinationCity' field.
   */
  public java.lang.CharSequence getDestinationCity() {
    return destinationCity;
  }


  /**
   * Sets the value of the 'destinationCity' field.
   * @param value the value to set.
   */
  public void setDestinationCity(java.lang.CharSequence value) {
    this.destinationCity = value;
  }

  /**
   * Gets the value of the 'pickUpAddress' field.
   * @return The value of the 'pickUpAddress' field.
   */
  public java.lang.CharSequence getPickUpAddress() {
    return pickUpAddress;
  }


  /**
   * Sets the value of the 'pickUpAddress' field.
   * @param value the value to set.
   */
  public void setPickUpAddress(java.lang.CharSequence value) {
    this.pickUpAddress = value;
  }

  /**
   * Gets the value of the 'dropOffAddress' field.
   * @return The value of the 'dropOffAddress' field.
   */
  public java.lang.CharSequence getDropOffAddress() {
    return dropOffAddress;
  }


  /**
   * Sets the value of the 'dropOffAddress' field.
   * @param value the value to set.
   */
  public void setDropOffAddress(java.lang.CharSequence value) {
    this.dropOffAddress = value;
  }

  /**
   * Gets the value of the 'startDateTime' field.
   * @return The value of the 'startDateTime' field.
   */
  public java.lang.CharSequence getStartDateTime() {
    return startDateTime;
  }


  /**
   * Sets the value of the 'startDateTime' field.
   * @param value the value to set.
   */
  public void setStartDateTime(java.lang.CharSequence value) {
    this.startDateTime = value;
  }

  /**
   * Gets the value of the 'endDateTime' field.
   * @return The value of the 'endDateTime' field.
   */
  public java.lang.CharSequence getEndDateTime() {
    return endDateTime;
  }


  /**
   * Sets the value of the 'endDateTime' field.
   * @param value the value to set.
   */
  public void setEndDateTime(java.lang.CharSequence value) {
    this.endDateTime = value;
  }

  /**
   * Gets the value of the 'reservationAmount' field.
   * @return The value of the 'reservationAmount' field.
   */
  public java.lang.CharSequence getReservationAmount() {
    return reservationAmount;
  }


  /**
   * Sets the value of the 'reservationAmount' field.
   * @param value the value to set.
   */
  public void setReservationAmount(java.lang.CharSequence value) {
    this.reservationAmount = value;
  }

  /**
   * Creates a new ReservationSummaryAvro RecordBuilder.
   * @return A new ReservationSummaryAvro RecordBuilder
   */
  public static com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder newBuilder() {
    return new com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder();
  }

  /**
   * Creates a new ReservationSummaryAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ReservationSummaryAvro RecordBuilder
   */
  public static com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder newBuilder(com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder other) {
    if (other == null) {
      return new com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder();
    } else {
      return new com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder(other);
    }
  }

  /**
   * Creates a new ReservationSummaryAvro RecordBuilder by copying an existing ReservationSummaryAvro instance.
   * @param other The existing instance to copy.
   * @return A new ReservationSummaryAvro RecordBuilder
   */
  public static com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder newBuilder(com.abg.rentalreservationservices.avro.ReservationSummaryAvro other) {
    if (other == null) {
      return new com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder();
    } else {
      return new com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for ReservationSummaryAvro instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ReservationSummaryAvro>
    implements org.apache.avro.data.RecordBuilder<ReservationSummaryAvro> {

    private long reservationId;
    private java.lang.CharSequence reserverName;
    private java.lang.CharSequence reserverEmail;
    private java.lang.CharSequence reserverPhoneNumber;
    private java.lang.CharSequence reserverDrivingLicenceNumber;
    private java.lang.CharSequence carName;
    private java.lang.CharSequence carPlate;
    private java.lang.CharSequence carType;
    private int carSeatingCapacity;
    private java.lang.CharSequence sourceCity;
    private java.lang.CharSequence destinationCity;
    private java.lang.CharSequence pickUpAddress;
    private java.lang.CharSequence dropOffAddress;
    private java.lang.CharSequence startDateTime;
    private java.lang.CharSequence endDateTime;
    private java.lang.CharSequence reservationAmount;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.reservationId)) {
        this.reservationId = data().deepCopy(fields()[0].schema(), other.reservationId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.reserverName)) {
        this.reserverName = data().deepCopy(fields()[1].schema(), other.reserverName);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.reserverEmail)) {
        this.reserverEmail = data().deepCopy(fields()[2].schema(), other.reserverEmail);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.reserverPhoneNumber)) {
        this.reserverPhoneNumber = data().deepCopy(fields()[3].schema(), other.reserverPhoneNumber);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.reserverDrivingLicenceNumber)) {
        this.reserverDrivingLicenceNumber = data().deepCopy(fields()[4].schema(), other.reserverDrivingLicenceNumber);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.carName)) {
        this.carName = data().deepCopy(fields()[5].schema(), other.carName);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.carPlate)) {
        this.carPlate = data().deepCopy(fields()[6].schema(), other.carPlate);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.carType)) {
        this.carType = data().deepCopy(fields()[7].schema(), other.carType);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.carSeatingCapacity)) {
        this.carSeatingCapacity = data().deepCopy(fields()[8].schema(), other.carSeatingCapacity);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.sourceCity)) {
        this.sourceCity = data().deepCopy(fields()[9].schema(), other.sourceCity);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.destinationCity)) {
        this.destinationCity = data().deepCopy(fields()[10].schema(), other.destinationCity);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.pickUpAddress)) {
        this.pickUpAddress = data().deepCopy(fields()[11].schema(), other.pickUpAddress);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.dropOffAddress)) {
        this.dropOffAddress = data().deepCopy(fields()[12].schema(), other.dropOffAddress);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.startDateTime)) {
        this.startDateTime = data().deepCopy(fields()[13].schema(), other.startDateTime);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.endDateTime)) {
        this.endDateTime = data().deepCopy(fields()[14].schema(), other.endDateTime);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.reservationAmount)) {
        this.reservationAmount = data().deepCopy(fields()[15].schema(), other.reservationAmount);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
    }

    /**
     * Creates a Builder by copying an existing ReservationSummaryAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(com.abg.rentalreservationservices.avro.ReservationSummaryAvro other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.reservationId)) {
        this.reservationId = data().deepCopy(fields()[0].schema(), other.reservationId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.reserverName)) {
        this.reserverName = data().deepCopy(fields()[1].schema(), other.reserverName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.reserverEmail)) {
        this.reserverEmail = data().deepCopy(fields()[2].schema(), other.reserverEmail);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.reserverPhoneNumber)) {
        this.reserverPhoneNumber = data().deepCopy(fields()[3].schema(), other.reserverPhoneNumber);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.reserverDrivingLicenceNumber)) {
        this.reserverDrivingLicenceNumber = data().deepCopy(fields()[4].schema(), other.reserverDrivingLicenceNumber);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.carName)) {
        this.carName = data().deepCopy(fields()[5].schema(), other.carName);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.carPlate)) {
        this.carPlate = data().deepCopy(fields()[6].schema(), other.carPlate);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.carType)) {
        this.carType = data().deepCopy(fields()[7].schema(), other.carType);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.carSeatingCapacity)) {
        this.carSeatingCapacity = data().deepCopy(fields()[8].schema(), other.carSeatingCapacity);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.sourceCity)) {
        this.sourceCity = data().deepCopy(fields()[9].schema(), other.sourceCity);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.destinationCity)) {
        this.destinationCity = data().deepCopy(fields()[10].schema(), other.destinationCity);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.pickUpAddress)) {
        this.pickUpAddress = data().deepCopy(fields()[11].schema(), other.pickUpAddress);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.dropOffAddress)) {
        this.dropOffAddress = data().deepCopy(fields()[12].schema(), other.dropOffAddress);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.startDateTime)) {
        this.startDateTime = data().deepCopy(fields()[13].schema(), other.startDateTime);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.endDateTime)) {
        this.endDateTime = data().deepCopy(fields()[14].schema(), other.endDateTime);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.reservationAmount)) {
        this.reservationAmount = data().deepCopy(fields()[15].schema(), other.reservationAmount);
        fieldSetFlags()[15] = true;
      }
    }

    /**
      * Gets the value of the 'reservationId' field.
      * @return The value.
      */
    public long getReservationId() {
      return reservationId;
    }


    /**
      * Sets the value of the 'reservationId' field.
      * @param value The value of 'reservationId'.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder setReservationId(long value) {
      validate(fields()[0], value);
      this.reservationId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'reservationId' field has been set.
      * @return True if the 'reservationId' field has been set, false otherwise.
      */
    public boolean hasReservationId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'reservationId' field.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder clearReservationId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'reserverName' field.
      * @return The value.
      */
    public java.lang.CharSequence getReserverName() {
      return reserverName;
    }


    /**
      * Sets the value of the 'reserverName' field.
      * @param value The value of 'reserverName'.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder setReserverName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.reserverName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'reserverName' field has been set.
      * @return True if the 'reserverName' field has been set, false otherwise.
      */
    public boolean hasReserverName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'reserverName' field.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder clearReserverName() {
      reserverName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'reserverEmail' field.
      * @return The value.
      */
    public java.lang.CharSequence getReserverEmail() {
      return reserverEmail;
    }


    /**
      * Sets the value of the 'reserverEmail' field.
      * @param value The value of 'reserverEmail'.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder setReserverEmail(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.reserverEmail = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'reserverEmail' field has been set.
      * @return True if the 'reserverEmail' field has been set, false otherwise.
      */
    public boolean hasReserverEmail() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'reserverEmail' field.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder clearReserverEmail() {
      reserverEmail = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'reserverPhoneNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getReserverPhoneNumber() {
      return reserverPhoneNumber;
    }


    /**
      * Sets the value of the 'reserverPhoneNumber' field.
      * @param value The value of 'reserverPhoneNumber'.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder setReserverPhoneNumber(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.reserverPhoneNumber = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'reserverPhoneNumber' field has been set.
      * @return True if the 'reserverPhoneNumber' field has been set, false otherwise.
      */
    public boolean hasReserverPhoneNumber() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'reserverPhoneNumber' field.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder clearReserverPhoneNumber() {
      reserverPhoneNumber = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'reserverDrivingLicenceNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getReserverDrivingLicenceNumber() {
      return reserverDrivingLicenceNumber;
    }


    /**
      * Sets the value of the 'reserverDrivingLicenceNumber' field.
      * @param value The value of 'reserverDrivingLicenceNumber'.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder setReserverDrivingLicenceNumber(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.reserverDrivingLicenceNumber = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'reserverDrivingLicenceNumber' field has been set.
      * @return True if the 'reserverDrivingLicenceNumber' field has been set, false otherwise.
      */
    public boolean hasReserverDrivingLicenceNumber() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'reserverDrivingLicenceNumber' field.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder clearReserverDrivingLicenceNumber() {
      reserverDrivingLicenceNumber = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'carName' field.
      * @return The value.
      */
    public java.lang.CharSequence getCarName() {
      return carName;
    }


    /**
      * Sets the value of the 'carName' field.
      * @param value The value of 'carName'.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder setCarName(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.carName = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'carName' field has been set.
      * @return True if the 'carName' field has been set, false otherwise.
      */
    public boolean hasCarName() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'carName' field.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder clearCarName() {
      carName = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'carPlate' field.
      * @return The value.
      */
    public java.lang.CharSequence getCarPlate() {
      return carPlate;
    }


    /**
      * Sets the value of the 'carPlate' field.
      * @param value The value of 'carPlate'.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder setCarPlate(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.carPlate = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'carPlate' field has been set.
      * @return True if the 'carPlate' field has been set, false otherwise.
      */
    public boolean hasCarPlate() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'carPlate' field.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder clearCarPlate() {
      carPlate = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'carType' field.
      * @return The value.
      */
    public java.lang.CharSequence getCarType() {
      return carType;
    }


    /**
      * Sets the value of the 'carType' field.
      * @param value The value of 'carType'.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder setCarType(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.carType = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'carType' field has been set.
      * @return True if the 'carType' field has been set, false otherwise.
      */
    public boolean hasCarType() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'carType' field.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder clearCarType() {
      carType = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'carSeatingCapacity' field.
      * @return The value.
      */
    public int getCarSeatingCapacity() {
      return carSeatingCapacity;
    }


    /**
      * Sets the value of the 'carSeatingCapacity' field.
      * @param value The value of 'carSeatingCapacity'.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder setCarSeatingCapacity(int value) {
      validate(fields()[8], value);
      this.carSeatingCapacity = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'carSeatingCapacity' field has been set.
      * @return True if the 'carSeatingCapacity' field has been set, false otherwise.
      */
    public boolean hasCarSeatingCapacity() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'carSeatingCapacity' field.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder clearCarSeatingCapacity() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'sourceCity' field.
      * @return The value.
      */
    public java.lang.CharSequence getSourceCity() {
      return sourceCity;
    }


    /**
      * Sets the value of the 'sourceCity' field.
      * @param value The value of 'sourceCity'.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder setSourceCity(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.sourceCity = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'sourceCity' field has been set.
      * @return True if the 'sourceCity' field has been set, false otherwise.
      */
    public boolean hasSourceCity() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'sourceCity' field.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder clearSourceCity() {
      sourceCity = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'destinationCity' field.
      * @return The value.
      */
    public java.lang.CharSequence getDestinationCity() {
      return destinationCity;
    }


    /**
      * Sets the value of the 'destinationCity' field.
      * @param value The value of 'destinationCity'.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder setDestinationCity(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.destinationCity = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'destinationCity' field has been set.
      * @return True if the 'destinationCity' field has been set, false otherwise.
      */
    public boolean hasDestinationCity() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'destinationCity' field.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder clearDestinationCity() {
      destinationCity = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'pickUpAddress' field.
      * @return The value.
      */
    public java.lang.CharSequence getPickUpAddress() {
      return pickUpAddress;
    }


    /**
      * Sets the value of the 'pickUpAddress' field.
      * @param value The value of 'pickUpAddress'.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder setPickUpAddress(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.pickUpAddress = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'pickUpAddress' field has been set.
      * @return True if the 'pickUpAddress' field has been set, false otherwise.
      */
    public boolean hasPickUpAddress() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'pickUpAddress' field.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder clearPickUpAddress() {
      pickUpAddress = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'dropOffAddress' field.
      * @return The value.
      */
    public java.lang.CharSequence getDropOffAddress() {
      return dropOffAddress;
    }


    /**
      * Sets the value of the 'dropOffAddress' field.
      * @param value The value of 'dropOffAddress'.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder setDropOffAddress(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.dropOffAddress = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'dropOffAddress' field has been set.
      * @return True if the 'dropOffAddress' field has been set, false otherwise.
      */
    public boolean hasDropOffAddress() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'dropOffAddress' field.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder clearDropOffAddress() {
      dropOffAddress = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'startDateTime' field.
      * @return The value.
      */
    public java.lang.CharSequence getStartDateTime() {
      return startDateTime;
    }


    /**
      * Sets the value of the 'startDateTime' field.
      * @param value The value of 'startDateTime'.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder setStartDateTime(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.startDateTime = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'startDateTime' field has been set.
      * @return True if the 'startDateTime' field has been set, false otherwise.
      */
    public boolean hasStartDateTime() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'startDateTime' field.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder clearStartDateTime() {
      startDateTime = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'endDateTime' field.
      * @return The value.
      */
    public java.lang.CharSequence getEndDateTime() {
      return endDateTime;
    }


    /**
      * Sets the value of the 'endDateTime' field.
      * @param value The value of 'endDateTime'.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder setEndDateTime(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.endDateTime = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'endDateTime' field has been set.
      * @return True if the 'endDateTime' field has been set, false otherwise.
      */
    public boolean hasEndDateTime() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'endDateTime' field.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder clearEndDateTime() {
      endDateTime = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'reservationAmount' field.
      * @return The value.
      */
    public java.lang.CharSequence getReservationAmount() {
      return reservationAmount;
    }


    /**
      * Sets the value of the 'reservationAmount' field.
      * @param value The value of 'reservationAmount'.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder setReservationAmount(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.reservationAmount = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'reservationAmount' field has been set.
      * @return True if the 'reservationAmount' field has been set, false otherwise.
      */
    public boolean hasReservationAmount() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'reservationAmount' field.
      * @return This builder.
      */
    public com.abg.rentalreservationservices.avro.ReservationSummaryAvro.Builder clearReservationAmount() {
      reservationAmount = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ReservationSummaryAvro build() {
      try {
        ReservationSummaryAvro record = new ReservationSummaryAvro();
        record.reservationId = fieldSetFlags()[0] ? this.reservationId : (java.lang.Long) defaultValue(fields()[0]);
        record.reserverName = fieldSetFlags()[1] ? this.reserverName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.reserverEmail = fieldSetFlags()[2] ? this.reserverEmail : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.reserverPhoneNumber = fieldSetFlags()[3] ? this.reserverPhoneNumber : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.reserverDrivingLicenceNumber = fieldSetFlags()[4] ? this.reserverDrivingLicenceNumber : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.carName = fieldSetFlags()[5] ? this.carName : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.carPlate = fieldSetFlags()[6] ? this.carPlate : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.carType = fieldSetFlags()[7] ? this.carType : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.carSeatingCapacity = fieldSetFlags()[8] ? this.carSeatingCapacity : (java.lang.Integer) defaultValue(fields()[8]);
        record.sourceCity = fieldSetFlags()[9] ? this.sourceCity : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.destinationCity = fieldSetFlags()[10] ? this.destinationCity : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.pickUpAddress = fieldSetFlags()[11] ? this.pickUpAddress : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.dropOffAddress = fieldSetFlags()[12] ? this.dropOffAddress : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.startDateTime = fieldSetFlags()[13] ? this.startDateTime : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.endDateTime = fieldSetFlags()[14] ? this.endDateTime : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.reservationAmount = fieldSetFlags()[15] ? this.reservationAmount : (java.lang.CharSequence) defaultValue(fields()[15]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ReservationSummaryAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<ReservationSummaryAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ReservationSummaryAvro>
    READER$ = (org.apache.avro.io.DatumReader<ReservationSummaryAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeLong(this.reservationId);

    out.writeString(this.reserverName);

    out.writeString(this.reserverEmail);

    out.writeString(this.reserverPhoneNumber);

    out.writeString(this.reserverDrivingLicenceNumber);

    out.writeString(this.carName);

    out.writeString(this.carPlate);

    out.writeString(this.carType);

    out.writeInt(this.carSeatingCapacity);

    out.writeString(this.sourceCity);

    out.writeString(this.destinationCity);

    out.writeString(this.pickUpAddress);

    out.writeString(this.dropOffAddress);

    out.writeString(this.startDateTime);

    out.writeString(this.endDateTime);

    out.writeString(this.reservationAmount);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.reservationId = in.readLong();

      this.reserverName = in.readString(this.reserverName instanceof Utf8 ? (Utf8)this.reserverName : null);

      this.reserverEmail = in.readString(this.reserverEmail instanceof Utf8 ? (Utf8)this.reserverEmail : null);

      this.reserverPhoneNumber = in.readString(this.reserverPhoneNumber instanceof Utf8 ? (Utf8)this.reserverPhoneNumber : null);

      this.reserverDrivingLicenceNumber = in.readString(this.reserverDrivingLicenceNumber instanceof Utf8 ? (Utf8)this.reserverDrivingLicenceNumber : null);

      this.carName = in.readString(this.carName instanceof Utf8 ? (Utf8)this.carName : null);

      this.carPlate = in.readString(this.carPlate instanceof Utf8 ? (Utf8)this.carPlate : null);

      this.carType = in.readString(this.carType instanceof Utf8 ? (Utf8)this.carType : null);

      this.carSeatingCapacity = in.readInt();

      this.sourceCity = in.readString(this.sourceCity instanceof Utf8 ? (Utf8)this.sourceCity : null);

      this.destinationCity = in.readString(this.destinationCity instanceof Utf8 ? (Utf8)this.destinationCity : null);

      this.pickUpAddress = in.readString(this.pickUpAddress instanceof Utf8 ? (Utf8)this.pickUpAddress : null);

      this.dropOffAddress = in.readString(this.dropOffAddress instanceof Utf8 ? (Utf8)this.dropOffAddress : null);

      this.startDateTime = in.readString(this.startDateTime instanceof Utf8 ? (Utf8)this.startDateTime : null);

      this.endDateTime = in.readString(this.endDateTime instanceof Utf8 ? (Utf8)this.endDateTime : null);

      this.reservationAmount = in.readString(this.reservationAmount instanceof Utf8 ? (Utf8)this.reservationAmount : null);

    } else {
      for (int i = 0; i < 16; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.reservationId = in.readLong();
          break;

        case 1:
          this.reserverName = in.readString(this.reserverName instanceof Utf8 ? (Utf8)this.reserverName : null);
          break;

        case 2:
          this.reserverEmail = in.readString(this.reserverEmail instanceof Utf8 ? (Utf8)this.reserverEmail : null);
          break;

        case 3:
          this.reserverPhoneNumber = in.readString(this.reserverPhoneNumber instanceof Utf8 ? (Utf8)this.reserverPhoneNumber : null);
          break;

        case 4:
          this.reserverDrivingLicenceNumber = in.readString(this.reserverDrivingLicenceNumber instanceof Utf8 ? (Utf8)this.reserverDrivingLicenceNumber : null);
          break;

        case 5:
          this.carName = in.readString(this.carName instanceof Utf8 ? (Utf8)this.carName : null);
          break;

        case 6:
          this.carPlate = in.readString(this.carPlate instanceof Utf8 ? (Utf8)this.carPlate : null);
          break;

        case 7:
          this.carType = in.readString(this.carType instanceof Utf8 ? (Utf8)this.carType : null);
          break;

        case 8:
          this.carSeatingCapacity = in.readInt();
          break;

        case 9:
          this.sourceCity = in.readString(this.sourceCity instanceof Utf8 ? (Utf8)this.sourceCity : null);
          break;

        case 10:
          this.destinationCity = in.readString(this.destinationCity instanceof Utf8 ? (Utf8)this.destinationCity : null);
          break;

        case 11:
          this.pickUpAddress = in.readString(this.pickUpAddress instanceof Utf8 ? (Utf8)this.pickUpAddress : null);
          break;

        case 12:
          this.dropOffAddress = in.readString(this.dropOffAddress instanceof Utf8 ? (Utf8)this.dropOffAddress : null);
          break;

        case 13:
          this.startDateTime = in.readString(this.startDateTime instanceof Utf8 ? (Utf8)this.startDateTime : null);
          break;

        case 14:
          this.endDateTime = in.readString(this.endDateTime instanceof Utf8 ? (Utf8)this.endDateTime : null);
          break;

        case 15:
          this.reservationAmount = in.readString(this.reservationAmount instanceof Utf8 ? (Utf8)this.reservationAmount : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










